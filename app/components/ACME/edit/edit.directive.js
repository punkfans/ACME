(function () {
    angular.module('app')
        .controller('editController', editController)
        .directive('editPage', editPage);

    function editController($routeParams, dataService, navigationService) {
        var vm = this;
        vm.navigationService = navigationService;
        // set the search tab to inactive
        navigationService.setInActive(0);

        // original item data
        vm.item = dataService.getItem(parseInt($routeParams.id));

        // keep a copy of the item and bind it to the view, make changes on this copy
        // instead of on the original one
        vm.itemModel = Object.assign({}, vm.item);

        // get all the keys for the label
        vm.keys = Object.keys(vm.item);

        // get rid of the id which should be generated instead of manually assigned
        // get rid of the $$hashKey generated by angular
        vm.keys = vm.keys.filter(function (key) {
           return key !== 'id' && key !== '$$hashKey';
        });

        vm.updateItem = function() {
            // convert tags from string to array again if it's changed, also have to trim each of the item
            // 'a, b, b' ===> ['a', 'b', 'c']
            if(typeof vm.itemModel.tags === 'string') {
                vm.itemModel.tags = vm.itemModel.tags.split(',').map(function (value) {
                    return value.trim();
                });
            }

            for(var i in vm.keys) {
                vm.item[vm.keys[i]] = vm.itemModel[vm.keys[i]];
            }

            navigationService.goToSearchPage();
        };
    }

    function editPage() {
        return {
            restrict: 'E',
            controller: 'editController as edit',
            templateUrl: 'app/components/ACME/edit/edit.html'
        }
    }
})();